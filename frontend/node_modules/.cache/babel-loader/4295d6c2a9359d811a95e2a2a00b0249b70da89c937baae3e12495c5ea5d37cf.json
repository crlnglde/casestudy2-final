{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\casestudy1-final\\\\frontend\\\\src\\\\pages\\\\orderList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from '../components/header';\nimport Footer from '../components/footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderList = () => {\n  _s();\n  // State to store orders\n  const [orders, setOrders] = useState([]);\n\n  // Function to fetch orders from the server\n  const fetchOrders = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/order/getorders'); // Assuming your backend endpoint for fetching orders is '/api/orders'\n      setOrders(response.data.orders); // Assuming your API response contains an array of orders\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n    }\n  };\n\n  // Fetch orders on component mount\n  useEffect(() => {\n    fetchOrders();\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Order List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/labaduh/order/new\",\n        className: \"btn btn-success\",\n        children: \"Create New Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-4\",\n          children: orders ? orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: [\"Order Number: \", order.orderNumber]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [\"Date: \", new Date(order.createdAt).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [\"Customer Name: \", order.customer.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [\"Service: \", order.service]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [\"Type: \", order.items[0].type]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [\"Kilo: \", order.items[0].kilo]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, order._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderList, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = OrderList;\nexport default OrderList;\nvar _c;\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","Footer","jsxDEV","_jsxDEV","OrderList","_s","orders","setOrders","fetchOrders","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","href","map","order","orderNumber","Date","createdAt","toLocaleDateString","customer","name","service","items","type","kilo","_id","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/casestudy1-final/frontend/src/pages/orderList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../components/header'; \r\nimport Footer from '../components/footer';\r\n\r\nconst OrderList = () => {\r\n  // State to store orders\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  // Function to fetch orders from the server\r\n  const fetchOrders = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/order/getorders'); // Assuming your backend endpoint for fetching orders is '/api/orders'\r\n      setOrders(response.data.orders); // Assuming your API response contains an array of orders\r\n    } catch (error) {\r\n      console.error('Error fetching orders:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch orders on component mount\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <br /><br />\r\n        <h1>Order List</h1>\r\n        <a href=\"/labaduh/order/new\" className=\"btn btn-success\">Create New Order</a>\r\n        <div className=\"row mt-4\">\r\n        <div className=\"row mt-4\">\r\n        {orders ? (\r\n          orders.map(order => (\r\n            <div key={order._id} className=\"col-md-4 mb-4\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Order Number: {order.orderNumber}</h5>\r\n                  <p className=\"card-text\">Date: {new Date(order.createdAt).toLocaleDateString()}</p>\r\n                  <p className=\"card-text\">Customer Name: {order.customer.name}</p>\r\n                  <p className=\"card-text\">Service: {order.service}</p>\r\n                  <p className=\"card-text\">Type: {order.items[0].type}</p>\r\n                  <p className=\"card-text\">Kilo: {order.items[0].kilo}</p>\r\n                  {/* Render other order details as needed */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>Loading...</p>\r\n        )}\r\n      </div>\r\n        </div>\r\n      </div>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}