{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\casestudy1-final\\\\frontend\\\\src\\\\pages\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto'; // Import Chart.js library\nimport Header from '../components/header'; // Import Header component\nimport Footer from '../components/footer'; // Import Footer component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [orderStatusCounts, setOrderStatusCounts] = useState({});\n  const [incomeData, setIncomeData] = useState([]);\n  const [ordersPerDayData, setOrdersPerDayData] = useState([]);\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  useEffect(() => {\n    // Fetch data for order status counts\n    axios.get('http://localhost:3000/order/statusCounts').then(response => {\n      setOrderStatusCounts(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching order status counts:\", error);\n    });\n\n    // Fetch data for income\n    axios.get(\"http://localhost:3000/order/income\").then(response => {\n      setIncomeData(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching income data:\", error);\n    });\n\n    // Fetch data for orders per day in a week\n    axios.get(\"http://localhost:3000/order/orderPerDay\").then(response => {\n      setOrdersPerDayData(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching orders per day data:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    const currentYear = new Date().getFullYear(); // Get the current year\n\n    // Draw charts here using orderStatusCounts, incomeData, and ordersPerDayData\n    // Example: Draw line chart for income data\n    if (incomeData.length > 0) {\n      const incomeChartCtx = document.getElementById('incomeChart').getContext('2d');\n\n      // Fill in missing months with zero values\n      const filledIncomeData = fillMissingMonths(incomeData);\n\n      // Check if there's an existing Chart instance and destroy it\n      const existingIncomeChart = Chart.getChart(incomeChartCtx);\n      if (existingIncomeChart) {\n        existingIncomeChart.destroy();\n      }\n\n      // Create a new Chart instance\n      new Chart(incomeChartCtx, {\n        type: 'line',\n        data: {\n          labels: filledIncomeData.map(data => {\n            // Format the month from the database with abbreviation\n            const date = new Date(`${data.year}-${data.month}-01`);\n            return date.toLocaleString('default', {\n              month: 'short'\n            });\n          }),\n          datasets: [{\n            label: 'Income',\n            data: filledIncomeData.map(data => data.totalAmount),\n            // Total amount data\n            borderColor: 'blue',\n            backgroundColor: 'rgba(0, 0, 255, 0.1)',\n            // Background color for area under the line\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          },\n          plugins: {\n            title: {\n              display: true,\n              text: currentYear.toString(),\n              padding: {\n                bottom: 20\n              }\n            },\n            subtitle: {\n              display: true,\n              text: `Year: ${currentYear}`,\n              // Display the current year\n              padding: {\n                top: 10\n              }\n            }\n          }\n        }\n      });\n    }\n\n    // Example: Draw bar chart for orders per day data\n    if (ordersPerDayData.length > 0) {\n      const ordersPerDayChartCtx = document.getElementById('ordersPerDayChart').getContext('2d');\n      new Chart(ordersPerDayChartCtx, {\n        type: 'bar',\n        data: {\n          labels: ordersPerDayData.map(data => data.day),\n          datasets: [{\n            label: 'Orders per Day',\n            data: ordersPerDayData.map(data => data.count),\n            backgroundColor: 'green',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }, [incomeData, ordersPerDayData, currentYear]);\n\n  // Function to fill missing months with zero values\n  const fillMissingMonths = data => {\n    const filledData = [];\n    const currentYear = new Date().getFullYear();\n    for (let month = 1; month <= 12; month++) {\n      const existingData = data.find(item => item.year === currentYear && item.month === month);\n      if (existingData) {\n        filledData.push(existingData);\n      } else {\n        filledData.push({\n          year: currentYear,\n          month,\n          totalAmount: 0\n        });\n      }\n    }\n    return filledData;\n  };\n\n  // Function to handle previous year button click\n  const handlePrevYearClick = () => {\n    setCurrentYear(prevYear => prevYear - 1);\n  };\n\n  // Function to handle next year button click\n  const handleNextYearClick = () => {\n    setCurrentYear(prevYear => prevYear + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jumbotron text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome to Our Website\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"We provide top-notch laundry services\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/labaduh/order/new\",\n          className: \"btn btn-primary btn-lg\",\n          children: \"Place an Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: \"Pending Orders\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: orderStatusCounts.pending || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: \"Orders Ready for Pickup\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: orderStatusCounts['ready for pick-up'] || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: \"Picked-up Orders\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: orderStatusCounts['picked-up'] || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-center\",\n                children: \"Income\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handlePrevYearClick,\n                className: \"btn btn-secondary me-2\",\n                children: \"Previous Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleNextYearClick,\n                className: \"btn btn-secondary ms-2\",\n                children: \"Next Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n                id: \"incomeChart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-center\",\n                children: \"Orders per Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n                id: \"ordersPerDayChart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"gDJz0y1qn087GSs8j6k1LmQDIrg=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","Header","Footer","jsxDEV","_jsxDEV","Home","_s","orderStatusCounts","setOrderStatusCounts","incomeData","setIncomeData","ordersPerDayData","setOrdersPerDayData","currentYear","setCurrentYear","Date","getFullYear","get","then","response","data","catch","error","console","length","incomeChartCtx","document","getElementById","getContext","filledIncomeData","fillMissingMonths","existingIncomeChart","getChart","destroy","type","labels","map","date","year","month","toLocaleString","datasets","label","totalAmount","borderColor","backgroundColor","borderWidth","options","scales","y","beginAtZero","plugins","title","display","text","toString","padding","bottom","subtitle","top","ordersPerDayChartCtx","day","count","filledData","existingData","find","item","push","handlePrevYearClick","prevYear","handleNextYearClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","href","pending","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/casestudy1-final/frontend/src/pages/home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Chart from 'chart.js/auto'; // Import Chart.js library\r\nimport Header from '../components/header'; // Import Header component\r\nimport Footer from '../components/footer'; // Import Footer component\r\n\r\nconst Home = () => {\r\n  const [orderStatusCounts, setOrderStatusCounts] = useState({});\r\n  const [incomeData, setIncomeData] = useState([]);\r\n  const [ordersPerDayData, setOrdersPerDayData] = useState([]);\r\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n\r\n  useEffect(() => {\r\n    // Fetch data for order status counts\r\n    axios.get('http://localhost:3000/order/statusCounts')\r\n      .then(response => {\r\n        setOrderStatusCounts(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching order status counts:\", error);\r\n      });\r\n\r\n    // Fetch data for income\r\n    axios.get(\"http://localhost:3000/order/income\")\r\n      .then(response => {\r\n        setIncomeData(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching income data:\", error);\r\n      });\r\n\r\n    // Fetch data for orders per day in a week\r\n    axios.get(\"http://localhost:3000/order/orderPerDay\")\r\n      .then(response => {\r\n        setOrdersPerDayData(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching orders per day data:\", error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const currentYear = new Date().getFullYear(); // Get the current year\r\n  \r\n    // Draw charts here using orderStatusCounts, incomeData, and ordersPerDayData\r\n    // Example: Draw line chart for income data\r\n    if (incomeData.length > 0) {\r\n      const incomeChartCtx = document.getElementById('incomeChart').getContext('2d');\r\n  \r\n      // Fill in missing months with zero values\r\n      const filledIncomeData = fillMissingMonths(incomeData);\r\n  \r\n      // Check if there's an existing Chart instance and destroy it\r\n      const existingIncomeChart = Chart.getChart(incomeChartCtx);\r\n      if (existingIncomeChart) {\r\n        existingIncomeChart.destroy();\r\n      }\r\n  \r\n      // Create a new Chart instance\r\n      new Chart(incomeChartCtx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: filledIncomeData.map(data => {\r\n            // Format the month from the database with abbreviation\r\n            const date = new Date(`${data.year}-${data.month}-01`);\r\n            return date.toLocaleString('default', { month: 'short' });\r\n          }),\r\n          datasets: [{\r\n            label: 'Income',\r\n            data: filledIncomeData.map(data => data.totalAmount), // Total amount data\r\n            borderColor: 'blue',\r\n            backgroundColor: 'rgba(0, 0, 255, 0.1)', // Background color for area under the line\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        options: {\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true\r\n            }\r\n          },\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: currentYear.toString(),\r\n              padding: { bottom: 20 }\r\n            },\r\n            subtitle: {\r\n              display: true,\r\n              text: `Year: ${currentYear}`, // Display the current year\r\n              padding: { top: 10 }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // Example: Draw bar chart for orders per day data\r\n    if (ordersPerDayData.length > 0) {\r\n      const ordersPerDayChartCtx = document.getElementById('ordersPerDayChart').getContext('2d');\r\n      new Chart(ordersPerDayChartCtx, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: ordersPerDayData.map(data => data.day),\r\n          datasets: [{\r\n            label: 'Orders per Day',\r\n            data: ordersPerDayData.map(data => data.count),\r\n            backgroundColor: 'green',\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        options: {\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [incomeData, ordersPerDayData, currentYear]);\r\n\r\n\r\n\r\n  // Function to fill missing months with zero values\r\n  const fillMissingMonths = (data) => {\r\n    const filledData = [];\r\n    const currentYear = new Date().getFullYear();\r\n    for (let month = 1; month <= 12; month++) {\r\n      const existingData = data.find(item => item.year === currentYear && item.month === month);\r\n      if (existingData) {\r\n        filledData.push(existingData);\r\n      } else {\r\n        filledData.push({ year: currentYear, month, totalAmount: 0 });\r\n      }\r\n    }\r\n    return filledData;\r\n  };\r\n\r\n  // Function to handle previous year button click\r\n  const handlePrevYearClick = () => {\r\n    setCurrentYear(prevYear => prevYear - 1);\r\n  };\r\n\r\n  // Function to handle next year button click\r\n  const handleNextYearClick = () => {\r\n    setCurrentYear(prevYear => prevYear + 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header /> {/* Include Header component */}\r\n      <div>\r\n        <div className=\"jumbotron text-center\">\r\n          <br/><br/>\r\n          <h1>Welcome to Our Website</h1>\r\n          <p>We provide top-notch laundry services</p>\r\n          <a href=\"/labaduh/order/new\" className=\"btn btn-primary btn-lg\">Place an Order</a>\r\n        </div>\r\n    \r\n        <div className=\"container\">\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Pending Orders</h5>\r\n                  <p className=\"card-text\">{orderStatusCounts.pending || 0}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Orders Ready for Pickup</h5>\r\n                  <p className=\"card-text\">{orderStatusCounts['ready for pick-up'] || 0}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Picked-up Orders</h5>\r\n                  <p className=\"card-text\">{orderStatusCounts['picked-up'] || 0}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"chart-container\">\r\n                <h2 className=\"text-center\">Income</h2>\r\n                <button onClick={handlePrevYearClick} className=\"btn btn-secondary me-2\">Previous Year</button>\r\n                  \r\n                  <button onClick={handleNextYearClick} className=\"btn btn-secondary ms-2\">Next Year</button>\r\n                <canvas id=\"incomeChart\"></canvas>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"chart-container\">\r\n                <h2 className=\"text-center\">Orders per Day</h2>\r\n                <canvas id=\"ordersPerDayChart\"></canvas>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer /> {/* Include Footer component */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}