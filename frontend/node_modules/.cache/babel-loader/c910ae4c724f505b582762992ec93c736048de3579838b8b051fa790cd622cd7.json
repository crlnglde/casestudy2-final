{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\casestudy1-final\\\\frontend\\\\src\\\\pages\\\\orderList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from '../components/header';\nimport Footer from '../components/footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderList = () => {\n  _s();\n  // State to store orders\n  const [orders, setOrders] = useState([]);\n\n  // Function to fetch orders from the server\n  const fetchOrders = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/order/getorders');\n      setOrders(response.data); // Assuming your API response contains an array of orders directly\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n    }\n  };\n\n  // Fetch orders on component mount\n  useEffect(() => {\n    fetchOrders();\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\n\n  // Function to handle status update for a specific order\n  const handleStatusUpdate = async (orderId, newStatus) => {\n    try {\n      await axios.put(`http://localhost:3000/order/updatestatus/${orderId}`, {\n        status: newStatus\n      });\n      // After updating status, fetch orders again to reflect changes\n      fetchOrders();\n    } catch (error) {\n      console.error('Error updating status:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Order List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/labaduh/order/new\",\n        className: \"btn btn-success\",\n        children: \"Create New Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-4\",\n        children: orders && orders.length > 0 ? orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: [\"Order Number: \", order.orderNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Date: \", new Date(order.createdAt).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Customer Name: \", order.firstName, \" \", order.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Service: \", order.service]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Type: \", order.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Kilo: \", order.kilo]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `status-${order._id}`,\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: `status-${order._id}`,\n                  className: \"form-control\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"pending\",\n                    children: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ready for pick-up\",\n                    children: \"Ready for Pick-up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"picked-up\",\n                    children: \"Picked-up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleStatusUpdate(order._id, document.getElementById(`status-${order._id}`).value),\n                className: \"btn btn-primary\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, order._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderList, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = OrderList;\nexport default OrderList;\nvar _c;\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","Footer","jsxDEV","_jsxDEV","OrderList","_s","orders","setOrders","fetchOrders","response","get","data","error","console","handleStatusUpdate","orderId","newStatus","put","status","children","fileName","_jsxFileName","lineNumber","columnNumber","className","href","length","map","order","orderNumber","Date","createdAt","toLocaleDateString","firstName","lastName","service","type","kilo","htmlFor","_id","id","value","onClick","document","getElementById","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/casestudy1-final/frontend/src/pages/orderList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../components/header'; \r\nimport Footer from '../components/footer';\r\n\r\nconst OrderList = () => {\r\n  // State to store orders\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  // Function to fetch orders from the server\r\n  const fetchOrders = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/order/getorders');\r\n      setOrders(response.data); // Assuming your API response contains an array of orders directly\r\n    } catch (error) {\r\n      console.error('Error fetching orders:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch orders on component mount\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\r\n\r\n  // Function to handle status update for a specific order\r\n  const handleStatusUpdate = async (orderId, newStatus) => {\r\n    try {\r\n      await axios.put(`http://localhost:3000/order/updatestatus/${orderId}`, { status: newStatus });\r\n      // After updating status, fetch orders again to reflect changes\r\n      fetchOrders();\r\n    } catch (error) {\r\n      console.error('Error updating status:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <br /><br />\r\n        <h1>Order List</h1>\r\n        <a href=\"/labaduh/order/new\" className=\"btn btn-success\">Create New Order</a>\r\n        <div className=\"row mt-4\">\r\n          {orders && orders.length > 0 ? (\r\n            orders.map(order => (\r\n              <div key={order._id} className=\"col-md-4 mb-4\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Order Number: {order.orderNumber}</h5>\r\n                    <p className=\"card-text\">Date: {new Date(order.createdAt).toLocaleDateString()}</p>\r\n                    <p className=\"card-text\">Customer Name: {order.firstName} {order.lastName}</p>\r\n                    <p className=\"card-text\">Service: {order.service}</p>\r\n                    <p className=\"card-text\">Type: {order.type}</p>\r\n                    <p className=\"card-text\">Kilo: {order.kilo}</p>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor={`status-${order._id}`}>Status:</label>\r\n                      <select id={`status-${order._id}`} className=\"form-control\">\r\n                        <option value=\"pending\">Pending</option>\r\n                        <option value=\"ready for pick-up\">Ready for Pick-up</option>\r\n                        <option value=\"picked-up\">Picked-up</option>\r\n                      </select>\r\n                    </div>\r\n                    <button onClick={() => handleStatusUpdate(order._id, document.getElementById(`status-${order._id}`).value)} className=\"btn btn-primary\">Save</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>Loading...</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}